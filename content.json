{"pages":[{"title":"Categories","date":"2019-06-23T01:55:52.931Z","path":"categories/index.html","text":""},{"title":"About","date":"2019-06-23T01:55:52.929Z","path":"about/index.html","text":""},{"title":"Tags","date":"2019-06-23T01:55:52.932Z","path":"tags/index.html","text":""}],"posts":[{"title":"梁老板访谈","date":"2019-07-15T01:17:49.000Z","path":"个人随想/梁老板访谈/","text":"在一个团队里边没有归属感没有荣誉感怎么办提升自己的主动性，主动融入到这个团队中 举个例子有三种实习生 给我工资，但是我不想干活，只是来混日子度假的，每次我只分配2%的工作给你 给我工资，我很开心，而且给我分配的工作都按时按量完成，我只分配5%的工作给你 在我分配的部分额外还有想法还主动和我提需求要加工作量，我希望会着重培养你，并且这种人给人的感觉就是 我们是一伙的。并且对业务有自己的理解，可以独自cover一个方面。我会分配很多核心的内容给你 我可以肯定第三种人肯定是归属感最强，荣誉感最强的。 在工作过程中怎么看待业务和技术的关系技术，始终要为业务服务的。一个公司不可能是技术驱动。 公司的业务和个人的技术什么关系在一个公司里，最快的熟悉业务，是你存在的价值。能最快的使用技术实现这个业务是你的本事。 每个公司有自己独特的业务，去其它公司无法复制。那么，在你跳槽选择新公司的时候，新的领导看重的是你的技术能力，而不是你上一家的业务理解程度。 所以 写代码，是为了熟悉业务，掌握业务。只有真正实操了，看到接口的输出状态，代码的运行状态，才能很好的理解这个业务在做什么看代码，是为了学习技术，掌握能力。学习别人优秀的代码，看看别人是怎么做的，看看别人是怎么实现的，为什么这么实现，这样写有什么好处","tags":[],"categories":[{"name":"个人随想","slug":"个人随想","permalink":"https://cwm.wiki/categories/个人随想/"}]},{"title":"Welcome","date":"2019-07-01T15:13:41.145Z","path":"welcome/","text":"欢迎来到我的Wiki系统 测试在紧急情况下使用右上角的 edit 按钮，通过 Github 提交 commit","tags":[],"categories":[]},{"title":"BT基本概念","date":"2019-06-22T16:00:00.000Z","path":"奇思妙想/BT/","text":"在下载BT时候使用的客户端 utorrent bittorrent 以上两个听说已经合并了，所以两个现在功能是相同的 以下两个为开源社区产品 qbtorretn transmission 参考资料 百度PT吧精品帖","tags":[{"name":"BT","slug":"BT","permalink":"https://cwm.wiki/tags/BT/"}],"categories":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://cwm.wiki/categories/奇思妙想/"}]},{"title":"Vscode 配置和技巧","date":"2019-06-22T16:00:00.000Z","path":"软件技巧/vscode/","text":"Git操作一些 shrotcut ctrl + shift + g 快速到达Git操作界面 ctrl + enter 提交一个commit setting 搜索 git post 可以修改commit后的操作，比如push or sync。 此操作需要在1.30.1版本之后","tags":[{"name":"vscode","slug":"vscode","permalink":"https://cwm.wiki/tags/vscode/"}],"categories":[{"name":"软件技巧","slug":"软件技巧","permalink":"https://cwm.wiki/categories/软件技巧/"}]},{"title":"Windows 快捷键","date":"2019-06-22T16:00:00.000Z","path":"软件技巧/windows/","text":"ctrl + w关闭当前窗口 win + e打开我的电脑 ctrl + win + 左右切换虚拟屏幕 win + 左右当前窗口变成二分屏 在双分屏作用下 win + 上下当前窗口变成四分屏 win + tab多任务视图 alt + tab快速切换任务，在看视频做笔记有奇效 win + space切换输入法","tags":[],"categories":[{"name":"软件技巧","slug":"软件技巧","permalink":"https://cwm.wiki/categories/软件技巧/"}]},{"title":"关于我的笔记系统","date":"2019-06-22T16:00:00.000Z","path":"个人随想/笔记思考/","text":"心中的笔记样子 界面简洁，排版整齐，要有留白，不能太满 最好静态页面，如果只是用来浏览的话足够 支持多级分类 分类目录可一次性展开和收缩 支持全文搜索 使用 Markdown 书写 有修改记录 ： 可以用Git的commit记录来作修改记录 所做的一些尝试手写笔记本、onenote、goodnote、evernote。 最后选择自建 wiki 系统。 关于对 Wiki 系统的理解Wiki 大多是用来进行 知识的整理、消化、归档。于是就有了下面一个知识管理流程 通过网页收集器（下面有说到）、RSS（还没有想法，等有想法的时候我再写一篇专门的文章）、微信公众号等封闭的 App 作为知识来源 通过笔记系统（手写笔记、印象笔记剪辑）初步筛选有价值有针对性的信息，收藏信息，分类整理，做读后要点总结记录。 自己突然想到或总结到的一两句话，可以用自己写的收集器。零碎的点子、灵感、初步消化的内容。 这个地方可以做一个周期性的消化整理到wiki中 将首次整理沉淀下来的东西放入到 wiki 系统中，最后当wiki有了一定量需要进一步重读消化，再整理。这个整理的时间间隔相比上一个步骤要长一些 在wiki中二次消化并且有自己的理解后，组织语言生成一篇全新的属于自己的文章，发布到博客上。记住博客中的内容都必须是原创和带有链接的引用。 在使用中，收集器相当于一个垃圾桶什么东西都往里面放，同样的这个部分中的信息也是更新整理频率最快的部分。 wiki 中新建一个板块的时候，可能只有很少内容或者一句话，但是通过这个流程日常使用、日积月累，那么这个板块记录中的内容也就变多了，也就是通过积累，把原本大量碎片化的知识结构化整理起来了，有一种成就感 最新想法 想法收集器 首先 Chrome 浏览器可以制作一个插件,类似于滴答清单,但是可以收集东西. 目前的感觉滴答清单非常好用,如果能做到功能简化功能单一的话就更好了. 以上想法需要解决的问题是 云存储的问题 如果是对于文字的存储就没问题,但是对于网页的存储呢? 希望找到一个可以用来收集想法的App 但是为了满足自己的需求,看起来还是需要对App进行定制化 RSS订阅推送 现在我自己的工作流是 主动的去各大网站搜寻,例如 V2ex 掘金 gitbook等等,但是总是会有时效性的,而且会出现有些资源被莫名删除的情况。","tags":[],"categories":[{"name":"个人随想","slug":"个人随想","permalink":"https://cwm.wiki/categories/个人随想/"}]},{"title":"在国内修改npm源的正确姿势","date":"2019-06-22T16:00:00.000Z","path":"编程相关/前端/在国内修改npm源的正确姿势/","text":"国内的淘宝前端团队做了npm的国内镜像并且制作了新的 cnpm 工具 但是 cnpm 有个问题，用它下载安装的模块都是以软链形式存在的，本来模块文件就多，再加个软链又多一倍文件，导致有些编辑器（sublime text）和 IDE（WebStorm）检索目录时非常慢。 而且cnpm 有时候会出现一些稀奇古怪的依赖问题 使用 npm i package --registry=https://registry.npm.taobao.org 这个方式是从指定仓库下载依赖但是因为 npm 的本身原因，下载速度还是不快。 一、添加 .npmrc .npmrc 是 npm runtime config 的意思，可以通过这个文件在命令行环境中为 npm 提供环境变量。 .npmrc npm 默认的源为 https://registry.npmjs.org/，我们可以通过这个配置修改 npmrc 文件来修改项目默认的 registry 地址： 12# .npmrcregistry = &apos;https://registry.npm.taobao.org&apos; $ npm config set registry https://registry.npm.taobao.org 全局修改 npm 源； nrm - NPM registry manager； npminstall - Make npm install fast and easy.","tags":[{"name":"npm","slug":"npm","permalink":"https://cwm.wiki/tags/npm/"}],"categories":[{"name":"编程相关","slug":"编程相关","permalink":"https://cwm.wiki/categories/编程相关/"},{"name":"前端","slug":"编程相关/前端","permalink":"https://cwm.wiki/categories/编程相关/前端/"}]}]}